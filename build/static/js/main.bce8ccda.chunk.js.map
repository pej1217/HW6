{"version":3,"sources":["ToDoApp.js","App.js","reportWebVitals.js","index.js"],"names":["todoItems","TodoList","items","this","props","map","item","index","removeItem","markTodoDone","className","React","Component","TodoListItem","onClickClose","bind","onClickDone","parseInt","todoClass","done","aria-hidden","onClick","value","type","TodoForm","onSubmit","refs","itemName","focus","event","preventDefault","newItemValue","addItem","form","reset","ref","placeholder","Button","label","variant","color","styleArgument","TodoHeader","style","TodoApp","state","todoItem","unshift","length","setState","itemIndex","splice","todo","push","id","initItems","ToDoApp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bce8ccda.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from '@material-ui/core/Button';\n\nvar todoItems = [];\n\n\nclass TodoList extends React.Component {\n  render() {\n    var items = this.props.items.map((item, index) => {\n      return (\n        <TodoListItem\n          key={index}\n          item={item}\n          index={index}\n          removeItem={this.props.removeItem}\n          markTodoDone={this.props.markTodoDone}\n        />\n      );\n    });\n    return <ul className=\"list-group\"> {items} </ul>;\n  }\n}\n\nclass TodoListItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onClickClose = this.onClickClose.bind(this);\n    this.onClickDone = this.onClickDone.bind(this);\n  }\n  onClickClose() {\n    var index = parseInt(this.props.index);\n    this.props.removeItem(index);\n  }\n  onClickDone() {\n    var index = parseInt(this.props.index);\n    this.props.markTodoDone(index);\n  }\n  render() {\n    var todoClass = this.props.item.done ? \"done\" : \"undone\";\n    return (\n      <li className=\"list-group-item \">\n        <div className={todoClass}>\n          <span\n            className=\"glyphicon glyphicon-ok icon\"\n            aria-hidden=\"true\"\n            onClick={this.onClickDone}\n          ></span>\n          {this.props.item.value}\n          <button type=\"button\" className=\"close\" onClick={this.onClickClose}>\n            &times;\n          </button>\n        </div>\n      </li>\n    );\n  }\n}\n\nclass TodoForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentDidMount() {\n    this.refs.itemName.focus();\n  }\n  onSubmit(event) {\n    event.preventDefault();\n    var newItemValue = this.refs.itemName.value;\n    if (newItemValue) {\n      this.props.addItem({ newItemValue });\n      this.refs.form.reset();\n    }\n  }\n  render() {\n    return (\n      <form ref=\"form\" onSubmit={this.onSubmit} className=\"form-inline\">\n        <input\n          type=\"text\"\n          ref=\"itemName\"\n          className=\"form-control\"\n          placeholder=\"add a new todo...\"\n        />\n        <Button label=\"Submit\" type=\"submit\" className=\"btn btn-default\" variant=\"outlined\" color=\"primary\">\n          Add\n        </Button>\n      </form>\n    );\n  }\n}\n\nconst styleArgument={color:'#61dafb'};\n\nclass TodoHeader extends React.Component {\n  render() {\n    return <h1 style={styleArgument}>CGU TodoList</h1>;\n  }\n}\n\nclass TodoApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addItem = this.addItem.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n    this.markTodoDone = this.markTodoDone.bind(this);\n    this.state = { todoItems: todoItems };\n  }\n  addItem(todoItem) {\n    todoItems.unshift({\n      index: todoItems.length + 1,\n      value: todoItem.newItemValue,\n      done: false\n    });\n    this.setState({ todoItems: todoItems });\n  }\n  removeItem(itemIndex) {\n    todoItems.splice(itemIndex, 1);\n    this.setState({ todoItems: todoItems });\n  }\n  markTodoDone(itemIndex) {\n    var todo = todoItems[itemIndex];\n    todoItems.splice(itemIndex, 1);\n    todo.done = !todo.done;\n    todo.done ? todoItems.push(todo) : todoItems.unshift(todo);\n    this.setState({ todoItems: todoItems });\n  }\n  render() {\n    return (\n      <div id=\"main\">\n        <TodoHeader />\n        <br></br><br></br>\n        <TodoForm addItem={this.addItem} />\n        <br></br>\n        <TodoList\n          items={this.props.initItems}\n          removeItem={this.removeItem}\n          markTodoDone={this.markTodoDone}\n        />\n      </div>\n    );\n  }\n}\n\nconst ToDoApp = () => {\n  return <TodoApp initItems={todoItems} />;\n};\n\nexport default ToDoApp;","//import logo from './logo.svg';\nimport './App.css';\nimport ToDoApp from './ToDoApp'\n\nfunction App() {\n  return(\n    <div className=\"App\">\n    \n      {ToDoApp()}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}